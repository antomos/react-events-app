{"ast":null,"code":"var _jsxFileName = \"/home/antomos/code/projects/routing project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 4\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(request, params) {\n  const response = await fetch(`http://localhost:8080/events/${params.eventId}`);\n  if (!response.ok) {\n    //return { isError: true, message: 'Something went wrong!' }\n    // throw new Response(JSON.stringify({ message: 'Coud not fetch Events!' }), {\n    //   status: 500,\n    // })\n    throw json({\n      message: 'Coud not fetch details for the selected event!'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","response","fetch","eventId","ok","message","status","$RefreshReg$"],"sources":["/home/antomos/code/projects/routing project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData, json} from \"react-router-dom\"\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetailPage() {\n  const data = useLoaderData();\n  return (\n   <EventItem event={data.event}/>\n  )\n}\n\nexport default EventDetailPage;\n\nexport async function loader(request, params) {\n\n  const response = await fetch(`http://localhost:8080/events/${params.eventId}`);\n  if (!response.ok) {\n    //return { isError: true, message: 'Something went wrong!' }\n    // throw new Response(JSON.stringify({ message: 'Coud not fetch Events!' }), {\n    //   status: 500,\n    // })\n    throw json(\n      { message: 'Coud not fetch details for the selected event!' },\n      {\n        status: 500,\n       }\n       );\n  } else {\n    return response\n  }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAO,kBAAkB;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,oBACCI,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAElC;AAACN,EAAA,CALQD,eAAe;EAAA,QACTL,aAAa;AAAA;AAAAa,EAAA,GADnBR,eAAe;AAOxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAE5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,MAAM,CAACG,OAAQ,EAAC,CAAC;EAC9E,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,MAAMnB,IAAI,CACR;MAAEoB,OAAO,EAAE;IAAiD,CAAC,EAC7D;MACEC,MAAM,EAAE;IACT,CACA,CAAC;EACN,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF;AAAC,IAAAJ,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}