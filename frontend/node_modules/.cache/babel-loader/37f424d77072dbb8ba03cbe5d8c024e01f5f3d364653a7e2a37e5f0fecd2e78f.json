{"ast":null,"code":"var _jsxFileName = \"/home/antomos/code/projects/routing project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: 'Something went wrong!' }\n    // throw new Response(JSON.stringify({ message: 'Coud not fetch Events!' }), {\n    //   status: 500,\n    // })\n    throw json({\n      message: 'Coud not fetch Events!'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    event: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","children","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","event","$RefreshReg$"],"sources":["/home/antomos/code/projects/routing project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n\n  const data = useLoaderData();\n\n\n\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: 'Something went wrong!' }\n    // throw new Response(JSON.stringify({ message: 'Coud not fetch Events!' }), {\n    //   status: 500,\n    // })\n    throw json(\n      { message: 'Coud not fetch Events!' },\n      {\n        status: 500,\n       }\n       );\n  } else {\n    return response\n  }\n}\n\nexport function loader() {\n return defer({\n    event: loadEvents(),\n  });\n\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAC;EAI5B,oBACEM,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,UAAU;MAACS,MAAM,EAAEA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAXQD,UAAU;EAAA,QAEJT,aAAa;AAAA;AAAAkB,EAAA,GAFnBT,UAAU;AAanB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,MAAMrB,IAAI,CACR;MAAEsB,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACT,CACA,CAAC;EACN,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACxB,OAAOvB,KAAK,CAAC;IACVwB,KAAK,EAAEP,UAAU,CAAC;EACpB,CAAC,CAAC;AAEJ;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}